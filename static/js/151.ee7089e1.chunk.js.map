{"version":3,"file":"static/js/151.ee7089e1.chunk.js","mappings":"uQAKaA,EAAO,mCAAG,WAAMC,GAAN,gFACfC,EADe,UAFN,+BAEM,kBACYD,EADZ,4BAHP,oCAGO,SAGEE,EAAAA,EAAAA,IAAUD,GAHZ,cAGfE,EAHe,yBAKdA,EAASC,KAAKC,MALA,2CAAH,sD,qFCHPC,EAAcC,EAAAA,GAAAA,GAAH,gKAMXC,EAAWD,EAAAA,GAAAA,GAAH,sBAERE,EAAUF,EAAAA,GAAAA,IAAH,4EAMPG,EAAWH,EAAAA,GAAAA,GAAH,mEAKRI,EAAOJ,EAAAA,GAAAA,EAAH,4C,SCmCjB,EAlDa,WACX,OAA8BK,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAAwCF,EAAAA,EAAAA,UAAS,MAAjD,eAAOG,EAAP,KAAqBC,EAArB,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QAmBR,OAjBAE,EAAAA,EAAAA,YAAU,YACR,iBAAC,6GAEsBpB,EAAQkB,GAF9B,UAIuB,KAFdb,EAFT,QAIYgB,OAJZ,uBAKKJ,EAAgB,gDALrB,0BAQKF,EAAWV,GARhB,0DAWGY,EAAgB,+CAXnB,yDAAD,EAcD,GAAE,CAACC,KAGF,2BACe,IAAZJ,IACC,SAACP,EAAD,UACGO,EAAQQ,KAAI,gBAAGrB,EAAH,EAAGA,GAAIsB,EAAP,EAAOA,aAAcC,EAArB,EAAqBA,KAAMC,EAA3B,EAA2BA,UAA3B,OACX,UAAChB,EAAD,YACE,SAACC,EAAD,CACEgB,IACEH,EAAY,2DAC4CA,GACpDI,EAENC,IAAKJ,EACLK,MAAM,MACNC,OAAO,SAET,SAACnB,EAAD,UAAWa,GAAc,MACzB,SAACZ,EAAD,UAAOa,EAAS,qBAAiBA,GAAc,OAZlCxB,EADJ,MAkBhBe,IAAgB,wBAAKA,MAG3B,C","sources":["servises/Api/GetCast.jsx","components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = 'dcb571cd23b92080c89a6cccb7d6e9ea';\nconst MAIN_URL = 'https://api.themoviedb.org/3';\n\nexport const GetCast = async id => {\n  const URL = `${MAIN_URL}/movie/${id}/credits?api_key=${API_KEY}`;\n\n  const response = await axios.get(URL);\n\n  return response.data.cast;\n};\n\nexport default GetCast;\n","import styled from 'styled-components';\n\nexport const CastWrapper = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(120px, 1fr));\n  grid-gap: 16px;\n`;\nexport const CastCard = styled.li``;\n\nexport const CastImg = styled.img`\n  margin: 0;\n  width: 100%;\n  object-fit: cover;\n`;\n\nexport const CastName = styled.h4`\n  margin-top: 8px;\n  margin-bottom: 8px;\n`;\n\nexport const Hero = styled.p`\n  margin-top: 8px;\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { GetCast } from '../../servises/Api/GetCast';\nimport defaultPhoto from '../../images/default-photo-hands.jpg';\nimport { CastWrapper, CastCard, CastImg, CastName, Hero } from './Cast.styled';\n\nconst Cast = () => {\n  const [castArr, setCastArr] = useState([]);\n  const [errorMassege, setErrorMassege] = useState(null);\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    (async () => {\n      try {\n        const data = await GetCast(movieId);\n\n        if (data.length === 0) {\n          setErrorMassege('There is no cast description for this movie.');\n          return;\n        } else {\n          setCastArr(data);\n        }\n      } catch {\n        setErrorMassege('Error loading info. Please reload the page.');\n      }\n    })();\n  }, [movieId]);\n\n  return (\n    <div>\n      {castArr !== 0 && (\n        <CastWrapper>\n          {castArr.map(({ id, profile_path, name, character }) => (\n            <CastCard key={id}>\n              <CastImg\n                src={\n                  profile_path\n                    ? `https://www.themoviedb.org/t/p/w138_and_h175_face${profile_path}`\n                    : defaultPhoto\n                }\n                alt={name}\n                width=\"154\"\n                height=\"175\"\n              />\n              <CastName>{name ? name : ''}</CastName>\n              <Hero>{character ? `Character: ${character}` : ''}</Hero>\n            </CastCard>\n          ))}\n        </CastWrapper>\n      )}\n      {errorMassege && <h2>{errorMassege}</h2>}\n    </div>\n  );\n};\n\nexport default Cast;\n"],"names":["GetCast","id","URL","axios","response","data","cast","CastWrapper","styled","CastCard","CastImg","CastName","Hero","useState","castArr","setCastArr","errorMassege","setErrorMassege","movieId","useParams","useEffect","length","map","profile_path","name","character","src","defaultPhoto","alt","width","height"],"sourceRoot":""}