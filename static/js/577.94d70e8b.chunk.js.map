{"version":3,"file":"static/js/577.94d70e8b.chunk.js","mappings":"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","sources":["components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","servises/Api/GetMovieDetails.jsx","pages/MovieDetails/MovieDetails.styled.jsx","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const LoaderWrap = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-top: 20px;\n  margin-bottom: 30px;\n`;\n","import { ColorRing } from 'react-loader-spinner';\nimport { LoaderWrap } from './Loader.styled';\n\nconst Loader = () => (\n  <LoaderWrap>\n    <ColorRing\n      visible={true}\n      height=\"80\"\n      width=\"80\"\n      ariaLabel=\"blocks-loading\"\n      wrapperStyle={{}}\n      wrapperClass=\"blocks-wrapper\"\n      colors={['#e15b64', '#f47e60', '#f8b26a', '#abbd81', '#849b87']}\n    />\n  </LoaderWrap>\n);\n\nexport default Loader;\n","import axios from 'axios';\n\nconst API_KEY = 'dcb571cd23b92080c89a6cccb7d6e9ea';\nconst MAIN_URL = 'https://api.themoviedb.org/3';\n\nexport const GetMovieDetails = async movieId => {\n  const URL = `${MAIN_URL}/movie/${movieId}?api_key=${API_KEY}`;\n\n  const response = await axios.get(URL);\n\n  return response.data;\n};\n\nexport default GetMovieDetails;\n","import { Link, NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const BackBtn = styled(Link)`\n  display: flex;\n  width: 100px;\n  height: 30px;\n  margin: 15px;\n  align-items: center;\n  justify-content: center;\n  background-color: #ffffff;\n  border: none;\n  border-radius: 2px;\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n  font-weight: 600;\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  :hover {\n    background-color: lightgrey;\n    color: #ffffff;\n    cursor: 'pointer';\n  }\n`;\n\nexport const MainData = styled.div`\n  display: flex;\n  gap: 30px;\n  padding-left: 15px;\n  padding-top: 30px;\n  padding-bottom: 30px;\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n`;\n\nexport const MovieImg = styled.img`\n  width: 180px;\n`;\n\nexport const InfoWrapper = styled.div``;\n\nexport const Title = styled.h2``;\n\nexport const SubTitle = styled.h3`\n  margin: 0;\n`;\n\nexport const Text = styled.p`\n  margin-top: 15px;\n`;\n\nexport const AddData = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n`;\n\nexport const AddDataItem = styled.li``;\n\nexport const AddDataLink = styled(NavLink)`\n  display: flex;\n  margin-bottom: 8px;\n\n  &.active {\n    color: rgb(227, 17, 108);\n  }\n`;\n","import { useParams, Outlet, useLocation } from 'react-router-dom';\nimport { useEffect, useState, useRef, Suspense } from 'react';\nimport { GetMovieDetails } from '../../servises/Api/GetMovieDetails';\nimport Loader from '../../components/Loader';\nimport {\n  BackBtn,\n  MainData,\n  MovieImg,\n  InfoWrapper,\n  Title,\n  SubTitle,\n  Text,\n  AddData,\n  AddDataItem,\n  AddDataLink,\n} from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const [movieData, setMovieData] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [errorMassege, setErrorMassege] = useState(null);\n\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLinkHref = useRef(location.state?.from ?? '/');\n\n  const { poster_path, title, release_date, overview, genres, vote_average } =\n    movieData;\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    (async () => {\n      try {\n        const data = await GetMovieDetails(movieId);\n\n        if (data.length === 0) {\n          setMovieData([]);\n          setIsLoading(false);\n          setErrorMassege('There is no description for this movie.');\n          return;\n        } else {\n          setMovieData(data);\n        }\n      } catch {\n        setErrorMassege('Movie details loading error.');\n      }\n    })();\n\n    setIsLoading(false);\n  }, [movieId]);\n\n  return (\n    <main>\n      {isLoading && <Loader />}\n      {movieData.length !== 0 && (\n        <>\n          <BackBtn to={backLinkHref.current}>Go back</BackBtn>\n          <MainData>\n            <MovieImg\n              src={`https://www.themoviedb.org/t/p/w600_and_h900_bestv2${poster_path}`}\n              alt={title}\n            />\n            <InfoWrapper>\n              <Title>\n                {title}(\n                {release_date ? release_date.slice(0, 4) : 'Unknown date'})\n              </Title>\n              <Text>\n                {vote_average\n                  ? `User score: ${(vote_average * 10).toFixed(0)}%`\n                  : 'Unknown user score'}\n              </Text>\n              <SubTitle>Overview:</SubTitle>\n              <Text>{overview ? overview : 'There is no overview'}</Text>\n              <SubTitle>Genres: </SubTitle>\n              <Text>\n                {genres\n                  ? genres.map(genre => genre.name).join(', ')\n                  : 'Unknown genre'}\n              </Text>\n            </InfoWrapper>\n          </MainData>\n          <AddData>\n            <AddDataItem>\n              <SubTitle>Additional information</SubTitle>\n            </AddDataItem>\n            <AddDataItem>\n              <AddDataLink to=\"cast\">Cast</AddDataLink>\n              <AddDataLink to=\"reviews\">Reviews</AddDataLink>\n            </AddDataItem>\n          </AddData>\n        </>\n      )}\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n      {errorMassege && <h2>{errorMassege}</h2>}\n    </main>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["LoaderWrap","styled","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","colors","GetMovieDetails","movieId","URL","axios","response","data","BackBtn","Link","MainData","MovieImg","InfoWrapper","Title","SubTitle","Text","AddData","AddDataItem","AddDataLink","NavLink","useState","movieData","setMovieData","isLoading","setIsLoading","errorMassege","setErrorMassege","useParams","location","useLocation","backLinkHref","useRef","state","from","poster_path","title","release_date","overview","genres","vote_average","useEffect","length","Loader","to","current","src","alt","slice","toFixed","map","genre","name","join","Suspense","fallback"],"sourceRoot":""}