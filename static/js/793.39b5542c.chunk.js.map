{"version":3,"file":"static/js/793.39b5542c.chunk.js","mappings":"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","sources":["components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","components/MovieCard/MovieCard.styled.jsx","components/MovieCard/MovieCard.jsx","components/MovieList/MovieList.styled.jsx","components/MovieList/MovieList.jsx","hooks/useLocalStorage.jsx","components/SearchBar/SearchBar.styled.jsx","components/SearchBar/SearchBar.jsx","servises/Api/GetMovies.jsx","pages/Movies/Movies.styled.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const LoaderWrap = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-top: 20px;\n  margin-bottom: 30px;\n`;\n","import { ColorRing } from 'react-loader-spinner';\nimport { LoaderWrap } from './Loader.styled';\n\nconst Loader = () => (\n  <LoaderWrap>\n    <ColorRing\n      visible={true}\n      height=\"80\"\n      width=\"80\"\n      ariaLabel=\"blocks-loading\"\n      wrapperStyle={{}}\n      wrapperClass=\"blocks-wrapper\"\n      colors={['#e15b64', '#f47e60', '#f8b26a', '#abbd81', '#849b87']}\n    />\n  </LoaderWrap>\n);\n\nexport default Loader;\n","import styled from 'styled-components';\n\nexport const Poster = styled.img`\n  width: 100%;\n  object-fit: cover;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  :hover {\n    transform: scale(1.03);\n    cursor: pointer;\n  }\n`;\n\nexport const Title = styled.h2`\n  color: #000000;\n  font-size: 14px;\n  text-align: center;\n`;\n","import { Poster, Title } from './MovieCard.styled';\nimport { Link } from 'react-router-dom';\nimport { useLocation } from 'react-router-dom';\nimport defaultImg from '../../images/default-photo-movie-clapper.jpg';\n\nconst MovieCard = ({ movieId, posterImg, title }) => {\n  const location = useLocation();\n  const currLocation = location.pathname;\n\n  return (\n    <section>\n      <li key={movieId}>\n        <Link\n          to={currLocation === '/' ? `movies/${movieId}` : `${movieId}`}\n          state={{ from: location }}\n        >\n          <div>\n            <Poster\n              src={\n                posterImg\n                  ? `https://www.themoviedb.org/t/p/w600_and_h900_bestv2${posterImg}`\n                  : `${defaultImg}`\n              }\n              alt={title}\n            />\n            <Title>{title}</Title>\n          </div>\n        </Link>\n      </li>\n    </section>\n  );\n};\n\nexport default MovieCard;\n","import styled from 'styled-components';\n\nexport const TopMovies = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(120px, 1fr));\n  grid-gap: 16px;\n  padding: 0;\n`;\n","import MovieCard from 'components/MovieCard/MovieCard';\nimport { TopMovies } from './MovieList.styled';\n\nconst MovieList = ({ movies, pageTitle }) => {\n  return (\n    <section>\n      <h2>{pageTitle}</h2>\n      <TopMovies>\n        {movies.map(movie => {\n          const { id, poster_path, title } = movie;\n          return (\n            <MovieCard\n              key={id}\n              posterImg={poster_path}\n              title={title}\n              movieId={id}\n            />\n          );\n        })}\n      </TopMovies>\n    </section>\n  );\n};\n\nexport default MovieList;\n","import { useState, useEffect } from 'react';\n\nconst KEY_MOVIES = 'movies';\nconst KEY_KEYWORD = 'keyword';\n\nconst useLocalStorageMovies = defaultValue => {\n  const [data, setData] = useState(() => {\n    return JSON.parse(window.localStorage.getItem(KEY_MOVIES)) ?? defaultValue;\n  });\n\n  useEffect(() => {\n    window.localStorage.setItem(KEY_MOVIES, JSON.stringify(data));\n  }, [data]);\n\n  return [data, setData];\n};\n\nconst useLocalStorageKeyword = defaultValue => {\n  const [data, setData] = useState(() => {\n    return JSON.parse(window.localStorage.getItem(KEY_KEYWORD)) ?? defaultValue;\n  });\n\n  useEffect(() => {\n    window.localStorage.setItem(KEY_KEYWORD, JSON.stringify(data));\n  }, [data]);\n\n  return [data, setData];\n};\n\nexport { useLocalStorageMovies, useLocalStorageKeyword };\n","import styled from 'styled-components';\n\nexport const SearchbarWrap = styled.div`\n  height: 40px;\n  padding-right: 24px;\n  padding-left: 15px;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  color: #fff;\n  background-color: #fff;\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n`;\n\nexport const SearchForm = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: #fff;\n  border-radius: 3px;\n  overflow: hidden;\n`;\n\nexport const SearchInput = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 18px;\n  border: none;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n  ::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n\nexport const SearchButton = styled.button`\n  display: inline-block;\n  width: 40px;\n  height: 40px;\n  border: 0;\n  background-image: url('https://image.flaticon.com/icons/svg/149/149852.svg');\n  background-size: 40%;\n  background-repeat: no-repeat;\n  background-position: center;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  :hover {\n    opacity: 1;\n  }\n`;\n","import { toast } from 'react-toastify';\nimport { useState } from 'react';\nimport {\n  SearchbarWrap,\n  SearchForm,\n  SearchButton,\n  SearchInput,\n} from './SearchBar.styled';\nimport { BsSearch } from 'react-icons/bs';\n\nconst SearchBar = ({ changeKeyWord }) => {\n  const [inputValue, setInputValue] = useState('');\n\n  const handleChange = e => {\n    setInputValue(e.target.value);\n  };\n\n  const hendleSubmit = e => {\n    e.preventDefault();\n\n    const q = e.target.lastChild.value.trim();\n\n    if (q === '') {\n      toast.info('Enter a keyword.');\n      return;\n    }\n\n    changeKeyWord(q);\n    setInputValue('');\n  };\n\n  return (\n    <SearchbarWrap>\n      <SearchForm onSubmit={hendleSubmit}>\n        <SearchButton type=\"submit\">\n          <BsSearch size={20} fill=\"black\" />\n        </SearchButton>\n\n        <SearchInput\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search movie\"\n          value={inputValue}\n          onChange={handleChange}\n        />\n      </SearchForm>\n    </SearchbarWrap>\n  );\n};\n\nexport default SearchBar;\n","import axios from 'axios';\n\nconst API_KEY = 'dcb571cd23b92080c89a6cccb7d6e9ea';\nconst MAIN_URL = 'https://api.themoviedb.org/3';\n\nconst MOVIE_BY_WORD_ENDPOINT = '/search/movie';\n\nexport const GetMovies = async keyWord => {\n  const URL = `${MAIN_URL}${MOVIE_BY_WORD_ENDPOINT}?api_key=${API_KEY}&query=${keyWord}&page=1`;\n\n  const response = await axios.get(URL);\n\n  return response.data.results;\n};\n\nexport default GetMovies;\n","import styled from 'styled-components';\n\nexport const Container = styled.main`\n  padding: 20px;\n`;\n","import { useEffect, useState } from 'react';\nimport {\n  useLocalStorageMovies,\n  useLocalStorageKeyword,\n} from '../../hooks/useLocalStorage';\nimport { useLocation } from 'react-router-dom';\nimport SearchBar from '../../components/SearchBar';\nimport MovieList from '../../components/MovieList';\nimport Loader from '../../components/Loader';\nimport GetMovies from '../../servises/Api/GetMovies';\nimport { Container } from './Movies.styled';\n\nconst Movies = () => {\n  const [keyWord, setKeyWord] = useLocalStorageKeyword('');\n  const [moviesArr, setMoviesArr] = useLocalStorageMovies([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [errorMassege, setErrorMassege] = useState(null);\n\n  const location = useLocation();\n\n  const changeKeyWord = value => {\n    setKeyWord(value);\n  };\n\n  useEffect(() => {\n    if (!keyWord) {\n      return;\n    }\n\n    setIsLoading(true);\n\n    (async () => {\n      try {\n        const data = await GetMovies(keyWord);\n\n        if (data.length === 0) {\n          setErrorMassege('There are no movies for this request.');\n          setMoviesArr([]);\n          setIsLoading(false);\n          return;\n        } else {\n          setMoviesArr(data);\n          setIsLoading(false);\n        }\n      } catch {\n        setErrorMassege('Movies loading error.');\n      }\n\n      setIsLoading(false);\n    })();\n  }, [keyWord, setMoviesArr]);\n\n  return (\n    <section>\n      <SearchBar changeKeyWord={changeKeyWord} />\n      <Container>\n        {moviesArr && (\n          <MovieList\n            movies={moviesArr}\n            pageTitle={`Found movies with \"${keyWord}\"`}\n            location={location}\n          />\n        )}\n        {isLoading && <Loader />}\n        {errorMassege && <h2>{errorMassege}</h2>}\n      </Container>\n    </section>\n  );\n};\n\nexport default Movies;\n"],"names":["LoaderWrap","styled","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","colors","Poster","Title","movieId","posterImg","title","location","useLocation","currLocation","pathname","to","state","from","src","defaultImg","alt","TopMovies","movies","pageTitle","map","movie","id","poster_path","KEY_MOVIES","KEY_KEYWORD","SearchbarWrap","SearchForm","SearchInput","SearchButton","changeKeyWord","useState","inputValue","setInputValue","onSubmit","e","preventDefault","q","target","lastChild","value","trim","toast","type","size","fill","autoComplete","autoFocus","placeholder","onChange","GetMovies","keyWord","URL","axios","response","data","results","Container","defaultValue","JSON","parse","window","localStorage","getItem","setData","useEffect","setItem","stringify","useLocalStorageKeyword","setKeyWord","useLocalStorageMovies","moviesArr","setMoviesArr","isLoading","setIsLoading","errorMassege","setErrorMassege","length","MovieList","Loader"],"sourceRoot":""}